{"version":3,"mappings":"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","names":["IndexNavbarComponent","constructor","window","this","ngOnInit","setNavbarOpen","navbarOpen","i0","Window","selectors","ctx","FooterComponent","Date","getFullYear","AppComponent","ChangelogComponent","httpClient","commitTypes","feat","fix","perf","test","style","revert","build","refactor","chore","docs","ci","get","subscribe","changelog","currentRelease","currentChanges","forEach","entry","tag","decoration","replace","split","filter","startsWith","pop","undefined","m","changes","version","releases","push","type","subject","commiter","date","message","scope","trim","release","sort","a","b","sortingTypes","CardComponent","ProfileCardComponent","SummaryCardComponent","QRCode","location","href","errorCorrectionLevel","error","url","qrCode","LogoCardComponent","WorkExperienceCardComponent","PublicationCardComponent","EducationCardComponent","routes","component","now","setFullYear","month","getMonth","padStart","day","getDate","dateFilter","resume","filterWork","isWorkFiltered","work","filteredWork","value","endDate","n","_a","ResumeComponent","path","pathMatch","redirectTo","AppRoutingModule","RouterModule","useHash","AppModule","bootstrap","provide","useValue","imports","BrowserModule","HttpClientModule","FormsModule","ServiceWorkerModule","enabled","registrationStrategy","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err","console"],"sources":["./src/app/components/navbars/index-navbar/index-navbar.component.ts","./src/app/components/navbars/index-navbar/index-navbar.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/changelog/changelog.component.html","./src/app/changelog/changelog.component.ts","./src/app/components/cards/card/card.component.ts","./src/app/components/cards/card/card.component.html","./src/app/components/cards/profile-card/profile-card.component.html","./src/app/components/cards/profile-card/profile-card.component.ts","./src/app/components/cards/summary-card/summary-card.component.html","./src/app/components/cards/summary-card/summary-card.component.ts","./src/app/components/cards/logo-card/logo-card.component.ts","./src/app/components/cards/logo-card/logo-card.component.html","./src/app/components/cards/work-experience-card/work-experience-card.component.html","./src/app/components/cards/work-experience-card/work-experience-card.component.ts","./src/app/components/cards/publication-card/publication-card.component.html","./src/app/components/cards/publication-card/publication-card.component.ts","./src/app/components/cards/education-card/education-card.component.html","./src/app/components/cards/education-card/education-card.component.ts","./src/app/resume/resume.component.html","./src/app/app-routing.module.ts","./src/app/resume/resume.component.ts","./src/app/app.module.ts","./src/environments/environment.prod.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-index-navbar\",\n  templateUrl: \"./index-navbar.component.html\",\n})\nexport class IndexNavbarComponent implements OnInit {\n  public navbarOpen = false;\n\n  public readonly window: Window;\n\n  public constructor(window: Window) {\n    this.window = window;\n  }\n\n  public ngOnInit(): void { }\n\n  public setNavbarOpen() {\n    this.navbarOpen = !this.navbarOpen;\n  }\n}\n","<nav class=\"top-0 sticky z-50 w-full flex flex-wrap items-center justify-between p-1 navbar-expand-lg bg-white shadow\">\n  <div class=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\n    <div class=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\n      <!-- Logo -->\n      <a [routerLink]=\"['/resume']\"\n        class=\"text-blueGray-700 text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase\">\n        <span class=\"inline-block w-8 h-8 p-1.5 rounded-lg shadow-md font-bold text-white bg-indigo-700\">LM</span>\n        Leonardo Meirelles\n      </a>\n      <!-- Navigation for mobile -->\n      <button\n        class=\"cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n        type=\"button\"\n        (click)=\"setNavbarOpen()\">\n        <span class=\"material-icons-outlined\">\n          menu\n        </span>\n      </button>\n    </div>\n    <!-- Navigation bar for mobile -->\n    <div class=\"lg:flex flex-grow items-center\"\n      [ngClass]=\"{ hidden: !navbarOpen, block: navbarOpen }\"\n      id=\"example-navbar-warning\">\n      <!-- Left items -->\n      <ul class=\"flex flex-col lg:flex-row list-none mr-auto\">\n        <!-- Resume -->\n        <li class=\"flex items-center\">\n          <a class=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-2 flex items-center text-xs uppercase font-bold\"\n            [routerLink]=\"['/resume']\">\n            <span class=\"material-icons-outlined sm:pr-1\">\n              description\n            </span>\n            Resume\n          </a>\n        </li>\n        <!-- Changelog -->\n        <li class=\"flex items-center\">\n          <a class=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-2 flex items-center text-xs uppercase font-bold\"\n            [routerLink]=\"['/changelog']\">\n            <span class=\"material-icons-outlined sm:pr-1\">\n              summarize\n            </span>\n            Changelog\n          </a>\n        </li>\n      </ul>\n      <!-- Right items -->\n      <ul class=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\n        <li class=\"flex items-center lg:hidden\">\n          <a (click)=\"window.print()\"\n            class=\"hover:text-blueGray-500 text-blueGray-700 px-3 py-2 flex items-center text-xs uppercase font-bold\">\n            <span class=\"material-icons-outlined sm:pr-1\">\n              print\n            </span>\n            Print\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html'\n})\nexport class FooterComponent {\n  /**\n   * Copyright notice\n   */\n  public readonly date = new Date().getFullYear();\n}\n","<div class=\"flex px-4 py-2 justify-between container\">\n  <!-- Copyright notice -->\n  <p class=\"flex items-end text-xl\">\n    <span class=\"material-icons-outlined\">\n      copyright\n    </span>\n    <span>{{date}}</span>\n  </p>\n  <!-- Links -->\n  <div class=\"flex gap-4\">\n    <!-- Github link -->\n    <a href=\"https://github.com/pitecus/meirelles\"\n      class=\"whitespace-nowrap flex items-end\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"inline mr-1\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\">\n        <path\n          d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm0 6c-3.313 0-6 2.686-6 6 0 2.651 1.719 4.9 4.104 5.693.3.056.396-.13.396-.289v-1.117c-1.669.363-2.017-.707-2.017-.707-.272-.693-.666-.878-.666-.878-.544-.373.041-.365.041-.365.603.042.92.619.92.619.535.917 1.403.652 1.746.499.054-.388.209-.652.381-.802-1.333-.152-2.733-.667-2.733-2.965 0-.655.234-1.19.618-1.61-.062-.153-.268-.764.058-1.59 0 0 .504-.161 1.65.615.479-.133.992-.199 1.502-.202.51.002 1.023.069 1.503.202 1.146-.776 1.648-.615 1.648-.615.327.826.121 1.437.06 1.588.385.42.617.955.617 1.61 0 2.305-1.404 2.812-2.74 2.96.216.186.412.551.412 1.111v1.646c0 .16.096.347.4.288 2.383-.793 4.1-3.041 4.1-5.691 0-3.314-2.687-6-6-6z\" />\n      </svg>\n      <span>Git Repo</span>\n    </a>\n    <!-- Build status badge -->\n    <div class=\"flex flex-col justify-center\">\n      <img src=\"https://github.com/pitecus/meirelles/actions/workflows/node.js.yml/badge.svg\"\n        width=\"130\"\n        alt=\"GitHub actions build status badge\" />\n    </div>\n\n  </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n}\n","<!-- nav bar -->\n<app-index-navbar class=\"print:hidden\"></app-index-navbar>\n\n<!-- Content -->\n<div class=\"flex flex-wrap items-center justify-between\">\n  <div class=\"container px-4 print:p-0 mx-auto flex flex-wrap items-center justify-between\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n<!-- Footer -->\n<footer class=\"w-full mt-4 bg-white print:hidden\">\n  <app-footer class=\"flex justify-center\"></app-footer>\n</footer>","<div class=\"flex justify-center\">\n  <div class=\"flex flex-col justify-between max-w-4xl min-w-full p-2 space-y-2\">\n    <header class=\"print:hidden\">\n      <!-- Page title -->\n      <h1 class=\"ml-10 lg:ml-0 border-b-2 border-gray-300 font-bold text-2xl text-indigo-900 flex justify-between\">\n        Changelog\n      </h1>\n    </header>\n    <!-- Main content. -->\n    <main class=\"flex flex-col\">\n      <div *ngFor=\"let release of releases\"\n        class=\"rounded-lg bg-white shadow px-2 pt-2 mb-2\">\n        <!-- Title -->\n        <h2 class=\"border-b-2 border-gray-300 font-bold text-xl text-indigo-900 flex justify-between\">\n          Release {{release.version}}\n        </h2>\n        <!-- Entries -->\n        <div class=\"mt-2 flex flex-row flex-wrap -mr-2\">\n          <div *ngFor=\"let commit of release.changes\"\n            class=\"shadow p-2 rounded-lg bg-gray-50 sm:w-72 print:w-72 mr-2 mb-2 flex-grow\">\n            <h3 class=\"text-lg text-gray-700 border-b-2\">\n              {{commitTypes[commit.type].emoji}}\n              <span class=\"ml-2\">{{commitTypes[commit.type].title}}</span>\n            </h3>\n            <ul class=\"list-disc list-inside\">\n              <!-- Commit type -->\n              <li *ngFor=\"let change of commit.changes\"\n                class=\"\">{{change.message.subject }}</li>\n            </ul>\n          </div>\n        </div>\n\n      </div>\n    </main>\n  </div>\n</div>","import { Changelog } from './changelog';\nimport { ChangelogDetail } from './changelog-detail';\nimport { CommitType } from './commit-type';\nimport { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Release } from './release';\nimport commitTypes from './commit-types.json';\n\n@Component({\n  selector: 'app-changelog',\n  templateUrl: './changelog.component.html',\n  styleUrls: ['./changelog.component.scss']\n})\nexport class ChangelogComponent {\n  /**\n   * Release entries.\n   */\n  public releases: Release[] = [];\n\n  /**\n   * Commit type.\n   */\n  public commitTypes: { [commitType: string]: CommitType } = commitTypes;\n\n  /**\n   * Sorting commit types.\n   */\n  private sortingTypes: { [type: string]: number } = {\n    feat: 1,\n    fix: 2,\n    perf: 3,\n    test: 4,\n    style: 5,\n    revert: 6,\n    build: 7,\n    refactor: 8,\n    chore: 9,\n    docs: 10,\n    ci: 11,\n  };\n\n  /**\n   * Initialize the component.\n   */\n  public constructor(httpClient: HttpClient) {\n    // Get the resume.\n    httpClient.get<Changelog[]>('/assets/changelog.json')\n      .subscribe(\n        (changelog: Changelog[]) => {\n          // Current release.\n          let currentRelease: Release;\n          let currentChanges: { [type: string]: ChangelogDetail[] };\n\n          // Loop throught the changelog and populate the release.\n          changelog.forEach((entry: Changelog): void => {\n            // Extract tag from current entry.\n            const tag = entry\n              .decoration\n              .replace(/[ \\(\\)]/g, '')\n              .split(',')\n              .filter((entry: string) => entry.startsWith('tag:') === true)\n              .pop();\n\n            if (tag !== undefined || currentRelease === undefined) {\n              // Current changes grouped by type.\n              currentChanges = {};\n\n              if (tag !== undefined) {\n                // Initialize a release.\n                currentRelease = {\n                  changes: [],\n                  version: tag.replace('tag:', '')\n                };\n              } else {\n                // Initialize a release.\n                currentRelease = {\n                  changes: [],\n                  version: ''\n                };\n              }\n\n              // Add to the releases.\n              this.releases.push(currentRelease);\n            }\n\n            // Parse the commit message.\n            const [type, subject] = entry.subject.split(':', 2);\n\n            // Check if type already exists.\n            if (currentChanges[type] === undefined) {\n              currentChanges[type] = [];\n\n              // Append to the release.\n              currentRelease.changes.push({\n                type,\n                changes: currentChanges[type]\n              });\n            }\n\n            // Append\n            currentChanges[type].push({\n              commiter: entry.commiter,\n              date: entry.date,\n              message: {\n                scope: '',\n                subject: subject.trim(),\n                type\n              }\n            })\n          });\n\n          // Sort the change types.\n          this.releases\n            .forEach((release) => {\n              release.changes\n                .sort((a, b) => this.sortingTypes[a.type] - this.sortingTypes[b.type])\n            })\n        }\n      );\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html'\n})\nexport class CardComponent {\n}\n","<!-- Card component -->\n<div class=\"h-full border print:border-0 border-gray-300 rounded bg-white shadow-lg print:shadow-none\">\n  <ng-content></ng-content>\n</div>","<!-- Photo, location and contacts -->\n<app-card>\n  <!-- Photo -->\n  <div class=\"p-4 print:hidden\">\n    <!-- TODO: update the photo to be provided by basics interface -->\n    <img class=\"p-2 mt-2 rounded-full shadow-lg m-auto border border-indigo-200 \"\n      alt=\"portrait\"\n      src=\"assets/leo-meirelles.jpeg\" />\n  </div>\n  <!-- Details -->\n  <div *ngIf=\"basics\"\n    class=\"p-4 print:p-0\">\n    <!-- Name -->\n    <h1 class=\"font-semibold text-2xl print:text-xl text-indigo-900\">{{basics.name}}</h1>\n    <!-- Label and pronoun -->\n    <div class=\"flex justify-between\">\n      <!-- Label -->\n      <p>{{basics.label}}</p>\n      <!-- Pronoun -->\n      <p class=\"text-gray-500\">{{basics.pronoun}}</p>\n    </div>\n    <!-- Location -->\n    <p class=\"text-gray-500 text-sm mb-2\">\n      {{basics.location?.city}}, &nbsp;\n      {{basics.location?.region}}, &nbsp;\n      {{basics.location?.countryCode}}\n    </p>\n    <!-- Phone contact -->\n    <p class=\"flex pb-1 text-indigo-600\">\n      <span class=\"material-icons-outlined text-black\">\n        phone\n      </span>\n      <a class=\"pl-2\"\n        rel=\"noopener noreferrer\"\n        href=\"tel:{{basics.phone}}\">\n        {{basics.phone}}\n      </a>\n    </p>\n    <!-- Email contact -->\n    <p class=\"flex pb-1 text-indigo-600\">\n      <span class=\"material-icons-outlined text-black\">\n        alternate_email\n      </span>\n      <a class=\"pl-2\"\n        rel=\"noopener noreferrer\"\n        href=\"mailto:{{basics.email}}\">\n        {{basics.email}}\n      </a>\n    </p>\n    <!-- Website -->\n    <p class=\"flex text-indigo-600\">\n      <span class=\"material-icons-outlined text-black\">\n        contact_page\n      </span>\n      <a class=\"pl-2\"\n        rel=\"noopener noreferrer\"\n        href=\"{{basics.website}}\">\n        {{basics.website}}\n      </a>\n    </p>\n  </div>\n</app-card>","import { Component, Input } from '@angular/core';\n\nimport { Basics } from '../../../resume/basics';\n\n/**\n * Profile card\n */\n@Component({\n  selector: 'app-profile-card',\n  templateUrl: './profile-card.component.html'\n})\nexport class ProfileCardComponent {\n  /**\n   * Basic resume information\n   */\n  @Input()\n  public basics?: Basics;\n}\n","<app-card>\n  <div class=\"p-4 print:p-0 flex flex-col justify-between h-full\">\n    <h2 class=\"border-b text-2xl mb-4 print:hidden\">Summary</h2>\n\n    <!-- Summary -->\n    <p class=\"text-md sm:text-xl print:text-sm\">\n      <img class=\"float-right hidden print:inline\"\n        width=\"50\"\n        height=\"50\"\n        alt=\"QR code\"\n        src={{qrCode}} />\n      {{summary}}\n    </p>\n\n    <!-- Links and version -->\n    <div class=\"flex flex-row justify-between pt-4 h-full\">\n      <!-- Links -->\n      <div class=\"flex flex-row content-end flex-wrap text-indigo-600\">\n        <a *ngFor=\"let profile of profiles\"\n          class=\"whitespace-nowrap mr-6\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          href=\"{{profile.url}}\">\n          <!-- Twitter -->\n          <svg *ngIf=\"profile.network == 'Twitter'\"\n            class=\"mr-1 inline\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\">\n            <path\n              d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm6.5 8.778c-.441.196-.916.328-1.414.388.509-.305.898-.787 1.083-1.362-.476.282-1.003.487-1.564.597-.448-.479-1.089-.778-1.796-.778-1.59 0-2.758 1.483-2.399 3.023-2.045-.103-3.86-1.083-5.074-2.572-.645 1.106-.334 2.554.762 3.287-.403-.013-.782-.124-1.114-.308-.027 1.14.791 2.207 1.975 2.445-.346.094-.726.116-1.112.042.313.978 1.224 1.689 2.3 1.709-1.037.812-2.34 1.175-3.647 1.021 1.09.699 2.383 1.106 3.773 1.106 4.572 0 7.154-3.861 6.998-7.324.482-.346.899-.78 1.229-1.274z\" />\n          </svg>\n          <!-- LinkedIn -->\n          <svg *ngIf=\"profile.network == 'LinkedIn'\"\n            class=\"mr-1 inline\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\">\n            <path\n              d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-2 8c0 .557-.447 1.008-1 1.008s-1-.45-1-1.008c0-.557.447-1.008 1-1.008s1 .452 1 1.008zm0 2h-2v6h2v-6zm3 0h-2v6h2v-2.861c0-1.722 2.002-1.881 2.002 0v2.861h1.998v-3.359c0-3.284-3.128-3.164-4-1.548v-1.093z\" />\n          </svg>\n          <!-- GitHub -->\n          <svg *ngIf=\"profile.network == 'GitHub'\"\n            class=\"mr-1 inline\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\">\n            <path\n              d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\n          </svg>\n          <!-- Usermane -->\n          {{profile.username}}\n        </a>\n      </div>\n      <!-- Version -->\n      <div class=\"flex items-end\">\n        <span class=\"text-right -mb-1 text-gray-500 text-sm print:text-xs inline\">v{{releaseVersion}} </span>\n      </div>\n    </div>\n  </div>\n</app-card>","import { Component, Input } from '@angular/core';\n\nimport { Profile } from '../../../resume/profile';\nimport QRCode from 'qrcode';\n\n/**\n * Summary card\n */\n@Component({\n  selector: 'app-summary-card',\n  templateUrl: './summary-card.component.html'\n})\nexport class SummaryCardComponent {\n  /**\n   * Summary\n   */\n  @Input()\n  public summary: string = '';\n\n  /**\n   * Profiles links\n   */\n  @Input()\n  public profiles: Profile[] = [];\n\n  /**\n   * Release version\n   */\n  @Input()\n  public releaseVersion: string = '';\n\n  /**\n   * The QR code for the page\n   */\n  public qrCode: string = '';\n\n  /**\n   * Initialize the component\n   */\n  public constructor() {\n    // Generate the QR code for the resume\n    QRCode.toDataURL(\n      window.location.href,\n      {\n        errorCorrectionLevel: 'low'\n      },\n      (error, url) => {\n        this.qrCode = url;\n      }\n    );\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-logo-card',\n  templateUrl: './logo-card.component.html'\n})\nexport class LogoCardComponent {\n  /**\n   * The path to the image.\n   */\n  @Input()\n  public src?: string;\n\n  /**\n   * Text description of the image.\n   */\n  @Input()\n  public alt?: string;\n}\n","<img [alt]=\"alt\"\n  class=\"w-20 h-20 rounded-tl\"\n  [src]=\"src\" />","<app-card *ngIf=\"work\">\n  <!-- Title -->\n  <div class=\"flex justify-between\">\n    <!-- Company -->\n    <div>\n      <!-- ADP -->\n      <app-logo-card *ngIf=\"work.company === 'ADP'\"\n        src=\"assets/logo-adp.jpeg\"\n        alt=\"ADP logo\"></app-logo-card>\n      <!-- Google -->\n      <app-logo-card *ngIf=\"work.company === 'Google'\"\n        src=\"assets/logo-google.png\"\n        alt=\"Google logo\"></app-logo-card>\n      <!-- NYT -->\n      <app-logo-card *ngIf=\"work.company === 'The New York Times'\"\n        alt=\"The New York Times logo\"\n        src=\"assets/logo-nyt.png\"></app-logo-card>\n    </div>\n    <!-- Position -->\n    <div class=\"pt-4 text-center\">\n      <h3 class=\"text-xl\">\n        {{work.position}}\n      </h3>\n      <span class=\"text-sm\">\n        {{work.company}}\n      </span>\n    </div>\n    <!-- Period -->\n    <div class=\"p-4 text-sm pl-1 text-right print:whitespace-nowrap\">\n      {{work.startDate | date: 'MMM yyyy'}}\n      <br className=\"print:hidden\" />\n      <span className=\"hidden print:inline\"> to </span>\n      <span *ngIf=\"work.endDate == 'Current'\">Present</span>\n      <span *ngIf=\"work.endDate != 'Current'\">{{work.endDate | date: 'MMM yyyy'}}</span>\n    </div>\n  </div>\n  <!-- Summary -->\n  <h4 class=\"px-4 bg-gray-50 shadow border border-y-gray-300 py-1 print:bg-white text-lg\">\n    {{work.summary}}</h4>\n\n  <!-- Highlights -->\n  <div class=\"p-4 pt-0 print:p-0 leading-relaxed text-base print:text-xs\">\n    <p *ngFor=\"let highlight of work.highlights\"\n      class=\"pt-4\">\n      {{highlight}}\n    </p>\n  </div>\n</app-card>","import { Component, Input } from '@angular/core';\n\nimport { Work } from '../../../resume/work';\n\n@Component({\n  selector: 'app-work-experience-card',\n  templateUrl: './work-experience-card.component.html'\n})\nexport class WorkExperienceCardComponent {\n  /**\n   * Basic resume information\n   */\n  @Input()\n  public work?: Work;\n}\n","<app-card *ngIf=\"publication\"\n  class=\"mt-2\">\n\n  <!-- Title -->\n  <div class=\"flex justify-between border-b border-b-gray-300 shadow\">\n    <!-- Company -->\n    <div>\n      <!-- ADP -->\n      <app-logo-card *ngIf=\"publication.publisher === 'ADP Global Product & Development Connect'\"\n        src=\"assets/logo-adp.jpeg\"\n        alt=\"ADP logo\"></app-logo-card>\n    </div>\n    <!-- Position -->\n    <div class=\"pt-4 text-center\">\n      <h3 class=\"text-xl\">\n        {{publication.name}}\n      </h3>\n      <span class=\"text-sm\">\n        {{publication.publisher}}\n      </span>\n    </div>\n    <!-- Period -->\n    <div class=\"p-4 text-sm pl-1 text-right print:whitespace-nowrap\">\n      {{ publication.releaseDate | date: 'MMM/yyyy'}}\n    </div>\n  </div>\n\n  <!-- Summary -->\n  <div class=\"p-4 pt-0 print:p-0 leading-relaxed text-base print:text-xs\">\n    <p class=\"pt-4\">\n      {{publication.summary}}\n    </p>\n  </div>\n</app-card>","import { Component, Input } from '@angular/core';\n\nimport { Publication } from '../../../resume/publication';\n\n@Component({\n  selector: 'app-publication-card',\n  templateUrl: './publication-card.component.html'\n})\nexport class PublicationCardComponent {\n  /**\n   * Publications and conferences\n   */\n  @Input()\n  public publication?: Publication;\n}\n","<app-card *ngIf=\"education\"\n  class=\"mt-2\">\n  <!-- Title -->\n  <div class=\"flex justify-between border-b border-b-gray-300 shadow\">\n\n    <!-- Logo card -->\n    <app-logo-card *ngIf=\"education.institution === 'Pontifícia Universidade Católica (PUCRS)'\"\n      src=\"assets/logo-pucrs.png\"\n      alt=\"Pontifícia Universidade Católica (PUCRS)\"></app-logo-card>\n\n\n    <!-- Position -->\n    <div class=\"pt-4 text-center\">\n      <h3 class=\"text-xl\">\n        {{education.studyType}} {{education.area}}\n      </h3>\n      <span class=\"text-sm\">\n        {{education.institution}}\n      </span>\n    </div>\n\n    <div class=\"p-4 text-sm pl-1 text-right print:whitespace-nowrap\">\n      {{education.startDate | date: 'MMM/yyyy'}}\n      <br className=\"print:hidden\" />\n      <span className=\"hidden print:inline\"> to </span>\n      {{education.endDate | date: 'MMM/yyyy'}}\n    </div>\n  </div>\n</app-card>","import { Component, Input } from '@angular/core';\n\nimport { Education } from '../../../resume/education';\n\n@Component({\n  selector: 'app-education-card',\n  templateUrl: './education-card.component.html'\n})\nexport class EducationCardComponent {\n  /**\n   * Education information\n   */\n  @Input()\n  public education?: Education;\n}\n","<div class=\"flex flex-col justify-between min-h-screen pt-4 print:pt-0\">\n  <!-- First row: personal info and summary -->\n  <div *ngIf=\"resume && resume.basics\"\n    class=\"flex container gap-3 flex-col md:flex-row print:flex-row \">\n    <!-- Photo, location and contacts -->\n    <app-profile-card [basics]=\"resume.basics\"></app-profile-card>\n\n    <!-- Summary -->\n    <app-summary-card [summary]=\"resume.basics.summary\"\n      [profiles]=\"resume.basics.profiles || []\"\n      [releaseVersion]=\"release?.version || ''\"></app-summary-card>\n  </div>\n\n  <!-- Body -->\n  <main class=\"pt-4\">\n    <!-- Work experience -->\n    <app-card>\n      <div class=\"flex justify-between p-4 print:p-0\">\n        <h2 class=\"text-2xl flex justify-between items-end print:text-lg\">\n          <span class=\"material-icons-outlined leading-normal pr-1 print:hidden\">\n            work_history\n          </span>\n          Experience\n        </h2>\n        <!-- Filter -->\n        <label class=\"flex items-center text-sm print:hidden\">\n          <input type=\"checkbox\"\n            [ngModel]=\"isWorkFiltered\"\n            (click)=\"filterWork()\"\n            class=\"form-checkbox h-4 w-4 text-indigo-500\" />\n          <span class=\"ml-2\">Last 7 years</span>\n        </label>\n      </div>\n    </app-card>\n\n    <div class=\"grid lg:grid-cols-2 gap-4 mt-4\">\n      <app-work-experience-card *ngFor=\"let work of filteredWork; last as isLast\"\n        [work]=\"work\">\n      </app-work-experience-card>\n    </div>\n\n    <!-- Publications and conferences -->\n    <div *ngIf=\"resume?.publications\"\n      class=\"pt-4\">\n      <app-card class=\"mt-4\">\n        <div class=\"flex justify-between p-4 print:p-0\">\n          <h2 class=\"text-2xl flex justify-between items-end print:text-lg\">\n            <span class=\"material-icons-outlined leading-normal pr-1 print:hidden\">\n              mic_external_on\n            </span>\n            Conferences\n            <span class=\"px-2\">/</span>\n            <span class=\"material-icons-outlined leading-normal pr-1 print:hidden\">\n              article\n            </span>\n            Publications\n          </h2>\n        </div>\n      </app-card>\n\n      <!-- List of publications/conferences -->\n      <div class=\"grid lg:grid-cols-2 gap-4 mt-4\">\n        <app-publication-card *ngFor=\"let publication of resume?.publications || []\"\n          [publication]=\"publication\"></app-publication-card>\n      </div>\n    </div>\n\n    <!-- Education and languages-->\n\n    <div *ngIf=\"resume?.education || resume?.languages\"\n      class=\"pt-4\">\n      <app-card class=\"mt-4\">\n        <div class=\"flex justify-between p-4 print:p-0\">\n          <h2 class=\"text-2xl flex justify-between items-end print:text-lg\">\n            <span class=\"material-icons-outlined leading-normal pr-1 print:hidden\">\n              school\n            </span>\n            Education\n            <span class=\"px-2\">/</span>\n            <span class=\"material-icons-outlined leading-normal pr-1 print:hidden\">\n              language\n            </span>\n            Languages\n          </h2>\n        </div>\n      </app-card>\n\n      <!-- List of schools and languages -->\n      <div class=\"grid lg:grid-cols-2 gap-4 mt-4\">\n        <app-education-card *ngFor=\"let education of resume?.education || []\"\n          [education]=\"education\"></app-education-card>\n\n      </div>\n    </div>\n\n\n    <div *ngIf=\"resume && (resume.education || resume.languages)\"\n      class=\"rounded-lg bg-white shadow p-2 mt-4 print:pt-0 print:-mt-2 print:shadow-none\">\n      <!-- Education -->\n      <div>\n        <h2 class=\"border-b-2 border-gray-300 font-bold text-xl text-indigo-900\">Education</h2>\n      </div>\n\n      <!-- Languages -->\n      <div *ngIf=\"resume.education\">\n        <h2 class=\"border-b-2 mt-4 border-gray-300 font-bold text-xl text-indigo-900\">\n          Languages\n        </h2>\n        <div *ngFor=\"let language of resume.languages\"\n          class=\"mt-2 flex flex-row flex-wrap\">\n          <p class=\"mr-4\">\n            <!-- Brazilian Portuguese -->\n            <span *ngIf=\"language.language === 'Portugues'\">🇧🇷</span>\n            <!-- USA English -->\n            <span *ngIf=\"language.language === 'English'\">🇺🇸</span>\n            <!-- The language -->\n            <span class=\"pl-2 font-bold\">{{language.language}}</span>:&nbsp;\n            <span>{{language.fluency}}</span>\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Technical skills -->\n    <div *ngIf=\"resume && resume.skills\"\n      class=\"rounded-lg bg-white shadow mt-4  p-2 print:shadow-none\">\n      <h2 class=\"border-b-2 border-gray-300 font-bold text-xl text-indigo-900\">\n        Technical Skills\n      </h2>\n      <div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 print:grid-cols-2 gap-2 mt-2\">\n        <div *ngFor=\"let skill of resume.skills\"\n          class=\"border-b print:shadow-none\">\n          <h2 class=\"font-bold rounded-lg p-1 text-md bg-gray-100 print:bg-white\">{{skill.name}}</h2>\n          <span class=\"text-sm print:text-xs\">\n            {{skill.keywords?.join(', ')}}\n          </span>\n        </div>\n      </div>\n    </div>\n  </main>\n</div>","import { RouterModule, Routes } from '@angular/router';\n\nimport { ChangelogComponent } from './changelog/changelog.component';\nimport { NgModule } from '@angular/core';\nimport { ResumeComponent } from './resume/resume.component';\n\nconst routes: Routes = [\n  // Resume.\n  {\n    component: ResumeComponent,\n    path: 'resume',\n    pathMatch: 'full'\n  },\n  // Changelog.\n  {\n    component: ChangelogComponent,\n    path: 'changelog',\n    pathMatch: 'full'\n  },\n  // Default route for application.\n  {\n    path: '',\n    pathMatch: 'full' ,\n    redirectTo: 'resume'\n  },\n  // Wildcard route for a 404 page\n  {\n    path: '**',\n    pathMatch: 'full',\n    redirectTo: 'resume'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(\n    routes,\n    {\n      useHash: true\n    }\n  )],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Release } from '../changelog/release';\nimport { Resume } from './resume';\nimport { Work } from './work';\n\n@Component({\n  selector: 'app-resume',\n  templateUrl: './resume.component.html'\n})\nexport class ResumeComponent {\n  /**\n   * The resume.\n   */\n  public resume?: Resume;\n\n  /**\n   * The release.\n   */\n  public release?: Release;\n\n  /**\n   * Filter jobs withing 10 years.\n   */\n  public isWorkFiltered = false;\n\n  /**\n   * Filtered work.\n   */\n  public filteredWork: Work[] = [];\n\n  /**\n   * Holds the date to filter.\n   */\n  private dateFilter: string;\n\n  /**\n   * Initialize the component.\n   */\n  public constructor(httpClient: HttpClient) {\n    // Calculate 7 years ago.\n    const now = new Date();\n    now.setFullYear(now.getFullYear() - 7);\n    const month: string = `${now.getMonth()}`.padStart(2, '0');\n    const day: string = `${now.getDate()}`.padStart(2, '0');\n    this.dateFilter = `${now.getFullYear()}-${month}-${day}`;\n\n    // Get the resume.\n    httpClient.get<Resume>('/assets/resume.json')\n      .subscribe(\n        (resume: Resume) => {\n          // Get the resume\n          this.resume = resume;\n\n          // Update filter.\n          this.filterWork();\n        }\n      );\n\n    // Get the resume.\n    httpClient.get<Release>('/assets/release.json')\n      .subscribe(\n        (release: Release) => {\n          // Get the resume\n          this.release = release;\n        }\n      );\n  }\n\n  /**\n   * Filter the work.\n   */\n  public filterWork(): void {\n    // Update the filter.\n    this.isWorkFiltered = this.isWorkFiltered === false;\n\n    // Remove filter.\n    if (this.isWorkFiltered === false) {\n      this.filteredWork = this.resume?.work || [];\n      return;\n    }\n\n    // Filter the work.\n    if (this.resume && this.resume.work) {\n      this.filteredWork = this.resume.work\n        .filter((value: Work) => value.endDate > this.dateFilter);\n    }\n  }\n}","import { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CardComponent } from './components/cards/card/card.component';\nimport { ChangelogComponent } from './changelog/changelog.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { IndexDropdownComponent } from \"./components/dropdowns/index-dropdown/index-dropdown.component\";\nimport { IndexNavbarComponent } from './components/navbars/index-navbar/index-navbar.component';\nimport { LogoCardComponent } from './components/cards/logo-card/logo-card.component';\nimport { NgModule } from '@angular/core';\nimport { PagesDropdownComponent } from \"./components/dropdowns/pages-dropdown/pages-dropdown.component\";\nimport { ProfileCardComponent } from './components/cards/profile-card/profile-card.component';\nimport { PublicationCardComponent } from './components/cards/publication-card/publication-card.component';\nimport { ResumeComponent } from './resume/resume.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { SummaryCardComponent } from './components/cards/summary-card/summary-card.component';\nimport { WorkExperienceCardComponent } from './components/cards/work-experience-card/work-experience-card.component';\nimport { environment } from '../environments/environment';\nimport { EducationCardComponent } from './components/cards/education-card/education-card.component';\n\n@NgModule({\n  bootstrap: [\n    AppComponent\n  ],\n  declarations: [\n    AppComponent,\n    ChangelogComponent,\n    IndexDropdownComponent,\n    IndexNavbarComponent,\n    PagesDropdownComponent,\n    ResumeComponent,\n    ProfileCardComponent,\n    SummaryCardComponent,\n    FooterComponent,\n    CardComponent,\n    WorkExperienceCardComponent,\n    PublicationCardComponent,\n    LogoCardComponent,\n    EducationCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  providers: [\n    {\n      provide: Window,\n      useValue: window\n    }\n  ]\n})\nexport class AppModule { }\n","export const environment = {\n  production: true\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n// import LogRocket from \"logrocket\";\n\nif (environment.production) {\n  enableProdMode();\n\n  // Initialize Log Rocket.\n  // LogRocket.init(\"guwjhj/resume\");\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main.d7a977b76d00a0ad.js"}