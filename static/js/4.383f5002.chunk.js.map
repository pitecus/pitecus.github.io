{"version":3,"sources":["changelog/Change.tsx","changelog/Changes.tsx","changelog/Reelase.tsx","changelog/Changelog.tsx"],"names":["Change","props","change","message","subject","Changes","localCommitTypes","commitTypes","className","type","emoji","title","changes","map","date","Release","release","version","Resume","React","Component","constructor","super","sortingTypes","feat","fix","perf","test","style","revert","build","refactor","chore","docs","ci","this","state","releases","error","isLoaded","componentDidMount","fetch","then","res","json","changelogs","currentRelease","currentChanges","forEach","entry","tag","decoration","replace","split","filter","startsWith","pop","undefined","push","commiter","scope","trim","sort","a","b","setState","console","log","render","rel","href","target"],"mappings":"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","file":"static/js/4.383f5002.chunk.js","sourcesContent":["import IChangelogDetail from './changelog-detail.interface';\n\nconst Change = (props: { change: IChangelogDetail }) => {\n  return <li>{props.change.message.subject}</li>;\n};\n\n/**\n * Export the function.\n */\nexport default Change;\n","import Change from './Change';\nimport IChangelogDetail from './changelog-detail.interface';\nimport ICommitType from './commit-type.interface';\nimport commitTypes from './commit-types.json';\n\nconst Changes = (props: { type: string; changes: IChangelogDetail[] }) => {\n  /**\n   * Commit type.\n   */\n  const localCommitTypes: { [commitType: string]: ICommitType } = commitTypes;\n\n  return (\n    <div className=\"shadow p-2 rounded-lg bg-gray-50 sm:w-72 print:w-72 mr-2 mt-2 flex-grow\">\n      <h3 className=\"text-lg text-gray-700 border-b-2\">\n        {localCommitTypes[props.type].emoji}\n        <span className=\"ml-2\">{localCommitTypes[props.type].title}</span>\n      </h3>\n      <ul className=\"list-disc list-inside\">\n        {/* Commit type */}\n        {props.changes.map((change) => (\n          <Change change={change} key={change.date} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n/**\n * Export the function.\n */\nexport default Changes;\n","import Changes from './Changes';\nimport IRelease from './release.interface';\n\nconst Release = (props: { release: IRelease }) => {\n  return (\n    <div className=\"rounded-lg bg-white shadow p-2 mb-2 print:shadow-none\">\n      <h2 className=\"border-b-2 border-gray-300 font-bold text-xl text-indigo-900\">Release {props.release.version}</h2>\n      <div className=\"mt-2 flex flex-row flex-wrap -mr-2\">\n        {props.release.changes.map((change) => (\n          <Changes type={change.type} changes={change.changes} key={change.type} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\n/**\n * Export the function.\n */\nexport default Release;\n","import IChangelog from './changelog.interface';\nimport IChangelogDetail from './changelog-detail.interface';\nimport IRelease from './release.interface';\nimport React from 'react';\nimport Release from './Reelase';\n\n/**\n * Resume component.\n */\nclass Resume extends React.Component<\n  {},\n  {\n    error: null;\n    isLoaded: boolean;\n    releases: IRelease[];\n  }\n> {\n  /**\n   * Sorting commit types.\n   */\n  private sortingTypes: { [type: string]: number } = {\n    feat: 1,\n    fix: 2,\n    perf: 3,\n    test: 4,\n    style: 5,\n    revert: 6,\n    build: 7,\n    refactor: 8,\n    chore: 9,\n    docs: 10,\n    ci: 11\n  };\n\n  /**\n   * Create a component.\n   * @param props the properties\n   */\n  public constructor(props: {}) {\n    super(props);\n\n    // Initialize the state.\n    this.state = {\n      releases: [],\n      error: null,\n      isLoaded: false\n    };\n  }\n\n  /**\n   * Called immediately after a component is mounted. Setting state here will trigger re-rendering.\n   */\n  public componentDidMount(): void {\n    // Retrieve the changelog.\n    // Retrieve the resume.\n    fetch('/assets/changelog.json')\n      // Extract only the json portion of the request.\n      .then((res) => res.json())\n      // Process the result.\n      .then(\n        (changelogs: IChangelog[]) => {\n          // Initialize the releases.\n          const releases: IRelease[] = [];\n\n          // Current release.\n          let currentRelease: IRelease;\n          let currentChanges: { [type: string]: IChangelogDetail[] };\n\n          // Loop throught the changelog and populate the release.\n          changelogs.forEach((entry: IChangelog): void => {\n            // Extract tag from current entry.\n            const tag = entry.decoration\n              .replace(/[ ()]/g, '')\n              .split(',')\n              .filter((entry: string) => entry.startsWith('tag:') === true)\n              .pop();\n\n            if (tag !== undefined || currentRelease === undefined) {\n              // Current changes grouped by type.\n              currentChanges = {};\n\n              if (tag !== undefined) {\n                // Initialize a release.\n                currentRelease = {\n                  changes: [],\n                  version: tag.replace('tag:', '')\n                };\n              } else {\n                // Initialize a release.\n                currentRelease = {\n                  changes: [],\n                  version: ''\n                };\n              }\n\n              // Add to the releases.\n              releases.push(currentRelease);\n            }\n\n            // Parse the commit message.\n            const [type, subject] = entry.subject.split(':', 2);\n\n            // Check if type already exists.\n            if (currentChanges[type] === undefined) {\n              currentChanges[type] = [];\n\n              // Append to the release.\n              currentRelease.changes.push({\n                type,\n                changes: currentChanges[type]\n              });\n            }\n\n            // Append\n            currentChanges[type].push({\n              commiter: entry.commiter,\n              date: entry.date,\n              message: {\n                scope: '',\n                subject: subject.trim(),\n                type\n              }\n            });\n          });\n\n          // Sort the change types.\n          releases.forEach((release) => {\n            release.changes.sort((a, b) => this.sortingTypes[a.type] - this.sortingTypes[b.type]);\n          });\n\n          // Update the releases.\n          this.setState({\n            releases: releases\n          });\n        },\n        (error) => {\n          console.log(error);\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n  }\n\n  /**\n   * Renders the component.\n   * @returns the html component.\n   */\n  public render(): JSX.Element {\n    // Extract the values from state.\n    const { releases } = this.state;\n\n    // Generate the component.\n    return (\n      <div className=\"flex flex-col flex-grow p-2 space-y-2 max-w-4xl\">\n        <header className=\"print:hidden\">\n          {/* Page title */}\n          <h1 className=\"border-b-2 border-gray-300 font-bold text-2xl text-indigo-900\">Changelog</h1>\n        </header>\n        <header className=\"p-2 rounded-lg bg-white shadow print:shadow-none flex sm:flex-row flex-col print:flex-row \">\n          {/* About */}\n          <div className=\"shadow p-2 rounded-lg bg-gray-50 sm:w-72 print:w-72 sm:mr-2 print:mr-2 flex-grow\">\n            <h2 className=\"border-b-2 border-gray-300 font-bold text-xl text-indigo-900\">About the project</h2>\n            <div className=\"mt-2 pr-2 flex flex-row flex-wrap -mr-2\">\n              <p>\n                This project started as an online resume that became a portfolio. It shows a custom responsive design and showcases how to\n                use React and TailwindCSS.\n              </p>\n              <p className=\"pt-2\">\n                It uses GitHub Actions to generate the changelog, create a release tag, and publish the web application on my GitHub Pages.\n              </p>\n            </div>\n          </div>\n          {/* Libraries */}\n          <div className=\"shadow p-2 rounded-lg bg-gray-50 sm:w-72 print:w-72 mt-2 sm:mt-0 print:mt-0 flex-grow\">\n            <h2 className=\"border-b-2 border-gray-300 font-bold text-xl text-indigo-900\">Libraries and Resources</h2>\n            <div className=\"mt-2 flex flex-row justify-evenly\">\n              <div className=\"flex-grow border-r mr-2\">\n                <ul className=\"list-disc list-inside text-indigo-600 underline\">\n                  <li>\n                    <a rel=\"noreferrer noopener\" href=\"https://reactjs.org/\" target=\"_blank\">\n                      React <span className=\"text-xs\">17.0.2</span>\n                    </a>\n                  </li>\n                  <li>\n                    <a rel=\"noreferrer noopener\" href=\"https://reactrouter.com/\" target=\"_blank\">\n                      React Router<span className=\"text-xs\">5.2.0</span>\n                    </a>\n                  </li>\n                  <li>\n                    <a rel=\"noreferrer noopener\" href=\"https://day.js.org/\" target=\"_blank\">\n                      DayJS <span className=\"text-xs\">1.10.6</span>\n                    </a>\n                  </li>\n                  <li>\n                    <a rel=\"noreferrer noopener\" href=\"https://www.typescriptlang.org/\" target=\"_blank\">\n                      Typescript <span className=\"text-xs\">4.3.5</span>\n                    </a>\n                  </li>\n                  <li>\n                    <a rel=\"noreferrer noopener\" href=\"https://tailwindcss.com/\" target=\"_blank\">\n                      TailwindCSS <span className=\"text-xs\">17.0.2</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"flex-grow\">\n                <ul className=\"list-disc list-inside text-indigo-600 underline\">\n                  <li>\n                    <a rel=\"noreferrer noopener\" href=\"https://heroicons.com/\" target=\"_blank\">\n                      heroicons\n                    </a>\n                  </li>\n                  <li>\n                    <a rel=\"noreferrer noopener\" href=\"https://iconmonstr.com/\" target=\"_blank\">\n                      iconmonstr\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </header>\n        {/* Main */}\n        <main className=\"flex-grow place-self-stretch\">\n          {/* Loop throught the changelogs entries */}\n          {releases.map((release) => (\n            <Release key={release.version} release={release} />\n          ))}\n        </main>\n      </div>\n    );\n  }\n}\n\n/**\n * Export the component.\n */\nexport default Resume;\n"],"sourceRoot":""}